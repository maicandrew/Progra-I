(define cad1 (string #\m #\u #\r #\c #\i #\e #\l #\a #\g #\o))
(define cad2 (make-string (string-length cad1) #\-))
(define cad3 (string-copy cad2))
(define (buscar l cad1 cad2 tam)
  (if (>= tam 0)
      (if (char=? (string-ref cad1 tam) l)
          (begin
             (string-set! cad2 tam l)
             (buscar l cad1 cad2 (- tam 1))
           )
           (buscar l cad1 cad2 (- tam 1))
       )
      (display cad2)
  )
)
(define (letra l)
    (buscar l cad1 cad2 (- (string-length cad1) 1))
)

(define (validarletra l vidas tam)
  (if (and (>= vidas 1) (>= tam 0))
      (if (char=? (string-ref cad1 tam) l)
          (begin
             (string-set! cad2 tam l)
             (validarletra l vidas (- tam 1))
           )
          (if (>= tam 0)
              (validarletra l vidas (- tam 1))
              (if (string=? cad3  cad2)
                  (begin
                    (display "Vidas restantes: ")
                    (display (- vidas 1))
                    (newline)
                    (validarletra (read-char) (- vidas 1) tam)
                  )
                  (begin
                    (display cad2)
                    (newline)
                    (validarletra (read-char) vidas tam)
                  )
              )
          )
      )
      (display "PerdiÃ³")
  )
)
(validarletra (read-char) 5 (- (string-length cad1) 1))